/*
 * This file is generated by jOOQ.
 */
package jhi.seams.server.database.codegen.tables;


import jhi.seams.server.database.codegen.SeamsDb;
import jhi.seams.server.database.codegen.tables.records.MeasurementComponentsRecord;
import org.jooq.*;
import org.jooq.impl.*;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.*;


// @formatter:off
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MeasurementComponents extends TableImpl<MeasurementComponentsRecord> {

    private static final long serialVersionUID = 1762682004;

    /**
     * The reference instance of <code>seams_db.measurement_components</code>
     */
    public static final MeasurementComponents MEASUREMENT_COMPONENTS = new MeasurementComponents();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MeasurementComponentsRecord> getRecordType() {
        return MeasurementComponentsRecord.class;
    }

    /**
     * The column <code>seams_db.measurement_components.measurement_id</code>.
     */
    public final TableField<MeasurementComponentsRecord, Integer> MEASUREMENT_ID = createField("measurement_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>seams_db.measurement_components.component_id</code>.
     */
    public final TableField<MeasurementComponentsRecord, Integer> COMPONENT_ID = createField("component_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>seams_db.measurement_components.created_on</code>.
     */
    public final TableField<MeasurementComponentsRecord, Timestamp> CREATED_ON = createField("created_on", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>seams_db.measurement_components.updated_on</code>.
     */
    public final TableField<MeasurementComponentsRecord, Timestamp> UPDATED_ON = createField("updated_on", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>seams_db.measurement_components</code> table reference
     */
    public MeasurementComponents() {
        this(DSL.name("measurement_components"), null);
    }

    /**
     * Create an aliased <code>seams_db.measurement_components</code> table reference
     */
    public MeasurementComponents(String alias) {
        this(DSL.name(alias), MEASUREMENT_COMPONENTS);
    }

    /**
     * Create an aliased <code>seams_db.measurement_components</code> table reference
     */
    public MeasurementComponents(Name alias) {
        this(alias, MEASUREMENT_COMPONENTS);
    }

    private MeasurementComponents(Name alias, Table<MeasurementComponentsRecord> aliased) {
        this(alias, aliased, null);
    }

    private MeasurementComponents(Name alias, Table<MeasurementComponentsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SeamsDb.SEAMS_DB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MeasurementComponentsRecord> getPrimaryKey() {
        return Internal.createUniqueKey(jhi.seams.server.database.codegen.tables.MeasurementComponents.MEASUREMENT_COMPONENTS, "KEY_measurement_components_PRIMARY", jhi.seams.server.database.codegen.tables.MeasurementComponents.MEASUREMENT_COMPONENTS.MEASUREMENT_ID, jhi.seams.server.database.codegen.tables.MeasurementComponents.MEASUREMENT_COMPONENTS.COMPONENT_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MeasurementComponentsRecord>> getKeys() {
        return Arrays.<UniqueKey<MeasurementComponentsRecord>>asList(
              Internal.createUniqueKey(jhi.seams.server.database.codegen.tables.MeasurementComponents.MEASUREMENT_COMPONENTS, "KEY_measurement_components_PRIMARY", jhi.seams.server.database.codegen.tables.MeasurementComponents.MEASUREMENT_COMPONENTS.MEASUREMENT_ID, jhi.seams.server.database.codegen.tables.MeasurementComponents.MEASUREMENT_COMPONENTS.COMPONENT_ID)
        );
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MeasurementComponents as(String alias) {
        return new MeasurementComponents(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MeasurementComponents as(Name alias) {
        return new MeasurementComponents(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MeasurementComponents rename(String name) {
        return new MeasurementComponents(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MeasurementComponents rename(Name name) {
        return new MeasurementComponents(name, null);
    }
// @formatter:on
}
