/*
 * This file is generated by jOOQ.
 */
package jhi.seams.server.database.codegen.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jhi.seams.server.database.codegen.SeamsDb;
import jhi.seams.server.database.codegen.tables.records.ComponentsRecord;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.TableImpl;


// @formatter:off
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Components extends TableImpl<ComponentsRecord> {

    private static final long serialVersionUID = 1621477567;

    /**
     * The reference instance of <code>seams_db.components</code>
     */
    public static final Components COMPONENTS = new Components();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ComponentsRecord> getRecordType() {
        return ComponentsRecord.class;
    }

    /**
     * The column <code>seams_db.components.id</code>.
     */
    public final TableField<ComponentsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>seams_db.components.crop_name</code>.
     */
    public final TableField<ComponentsRecord, String> CROP_NAME = createField("crop_name", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>seams_db.components.variety_name</code>.
     */
    public final TableField<ComponentsRecord, String> VARIETY_NAME = createField("variety_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>seams_db.components.description</code>.
     */
    public final TableField<ComponentsRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>seams_db.components.created_on</code>.
     */
    public final TableField<ComponentsRecord, Timestamp> CREATED_ON = createField("created_on", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>seams_db.components.updated_on</code>.
     */
    public final TableField<ComponentsRecord, Timestamp> UPDATED_ON = createField("updated_on", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>seams_db.components</code> table reference
     */
    public Components() {
        this(DSL.name("components"), null);
    }

    /**
     * Create an aliased <code>seams_db.components</code> table reference
     */
    public Components(String alias) {
        this(DSL.name(alias), COMPONENTS);
    }

    /**
     * Create an aliased <code>seams_db.components</code> table reference
     */
    public Components(Name alias) {
        this(alias, COMPONENTS);
    }

    private Components(Name alias, Table<ComponentsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Components(Name alias, Table<ComponentsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SeamsDb.SEAMS_DB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ComponentsRecord, Integer> getIdentity() {
        return Internal.createIdentity(jhi.seams.server.database.codegen.tables.Components.COMPONENTS, jhi.seams.server.database.codegen.tables.Components.COMPONENTS.ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ComponentsRecord> getPrimaryKey() {
        return Internal.createUniqueKey(jhi.seams.server.database.codegen.tables.Components.COMPONENTS, "KEY_components_PRIMARY", jhi.seams.server.database.codegen.tables.Components.COMPONENTS.ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ComponentsRecord>> getKeys() {
        return Arrays.<UniqueKey<ComponentsRecord>>asList(
              Internal.createUniqueKey(jhi.seams.server.database.codegen.tables.Components.COMPONENTS, "KEY_components_PRIMARY", jhi.seams.server.database.codegen.tables.Components.COMPONENTS.ID)
        );
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Components as(String alias) {
        return new Components(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Components as(Name alias) {
        return new Components(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Components rename(String name) {
        return new Components(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Components rename(Name name) {
        return new Components(name, null);
    }
// @formatter:on
}
