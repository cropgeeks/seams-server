/*
 * This file is generated by jOOQ.
 */
package jhi.seams.server.database.codegen.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;
import java.sql.Timestamp;

import javax.annotation.Generated;

import jhi.seams.server.database.codegen.enums.MeasurementsMeasurementType;


// @formatter:off
/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Measurements implements Serializable {

    private static final long serialVersionUID = 511068672;

    private Integer                     id;
    private Integer                     datasetId;
    private Integer                     traitId;
    private Integer                     traitUnitId;
    private BigDecimal                  measurement;
    private MeasurementsMeasurementType measurementType;
    private Timestamp                   createdOn;
    private Timestamp                   updatedOn;

    public Measurements() {}

    public Measurements(Measurements value) {
        this.id = value.id;
        this.datasetId = value.datasetId;
        this.traitId = value.traitId;
        this.traitUnitId = value.traitUnitId;
        this.measurement = value.measurement;
        this.measurementType = value.measurementType;
        this.createdOn = value.createdOn;
        this.updatedOn = value.updatedOn;
    }

    public Measurements(
        Integer                     id,
        Integer                     datasetId,
        Integer                     traitId,
        Integer                     traitUnitId,
        BigDecimal                  measurement,
        MeasurementsMeasurementType measurementType,
        Timestamp                   createdOn,
        Timestamp                   updatedOn
    ) {
        this.id = id;
        this.datasetId = datasetId;
        this.traitId = traitId;
        this.traitUnitId = traitUnitId;
        this.measurement = measurement;
        this.measurementType = measurementType;
        this.createdOn = createdOn;
        this.updatedOn = updatedOn;
    }

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public Integer getDatasetId() {
        return this.datasetId;
    }

    public void setDatasetId(Integer datasetId) {
        this.datasetId = datasetId;
    }

    public Integer getTraitId() {
        return this.traitId;
    }

    public void setTraitId(Integer traitId) {
        this.traitId = traitId;
    }

    public Integer getTraitUnitId() {
        return this.traitUnitId;
    }

    public void setTraitUnitId(Integer traitUnitId) {
        this.traitUnitId = traitUnitId;
    }

    public BigDecimal getMeasurement() {
        return this.measurement;
    }

    public void setMeasurement(BigDecimal measurement) {
        this.measurement = measurement;
    }

    public MeasurementsMeasurementType getMeasurementType() {
        return this.measurementType;
    }

    public void setMeasurementType(MeasurementsMeasurementType measurementType) {
        this.measurementType = measurementType;
    }

    public Timestamp getCreatedOn() {
        return this.createdOn;
    }

    public void setCreatedOn(Timestamp createdOn) {
        this.createdOn = createdOn;
    }

    public Timestamp getUpdatedOn() {
        return this.updatedOn;
    }

    public void setUpdatedOn(Timestamp updatedOn) {
        this.updatedOn = updatedOn;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Measurements (");

        sb.append(id);
        sb.append(", ").append(datasetId);
        sb.append(", ").append(traitId);
        sb.append(", ").append(traitUnitId);
        sb.append(", ").append(measurement);
        sb.append(", ").append(measurementType);
        sb.append(", ").append(createdOn);
        sb.append(", ").append(updatedOn);

        sb.append(")");
        return sb.toString();
    }
// @formatter:on
}
