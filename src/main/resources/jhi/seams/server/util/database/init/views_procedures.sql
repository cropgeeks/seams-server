DROP VIEW IF EXISTS `view_dataset_meta`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `view_dataset_meta` AS SELECT datasets.id AS `dataset_id`, datasets.name AS `dataset_name`, sites.name AS `site_name`, sites.latitude, sites.longitude, dataset_meta.tillage, dataset_meta.fertilizer, dataset_meta.herbicide, dataset_meta.farm_management, dataset_meta.weed_cover, dataset_meta.disease, dataset_meta.pests,dataset_meta.soil_health, dataset_meta.biodiversity, dataset_meta.cover_crop, dataset_meta.sowing_date, dataset_meta.harvest_date, (SELECT JSON_ARRAYAGG(t.ids) FROM (SELECT DISTINCT components.id AS ids, measurements.dataset_id FROM measurements LEFT JOIN measurement_components ON measurements.id = measurement_components.measurement_id LEFT JOIN components ON components.id = measurement_components.component_id) AS t WHERE t.dataset_id = datasets.id) AS `component_ids` FROM datasets LEFT JOIN sites ON sites.id = datasets.site_id LEFT JOIN dataset_meta ON dataset_meta.dataset_id = datasets.id;

DROP VIEW IF EXISTS `view_measurement_components`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `view_measurement_components` AS SELECT components.id AS `component_id`, measurements.id AS `measurement_id`, measurements.dataset_id AS `dataset_id`, traits.id AS `trait_id`, traits.name AS `trait_name`, units.id AS `trait_unit_id`, units.name AS `trait_unit_name`, measurements.measurement AS `measurement`, measurements.measurement_type AS `measurement_type`, measurements.created_on AS `created_on` FROM measurements LEFT JOIN measurement_components ON measurements.id = measurement_components.measurement_id LEFT JOIN components ON components.id = measurement_components.component_id LEFT JOIN traits ON traits.id = measurements.trait_id LEFT JOIN units ON units.id = measurements.trait_unit_id;